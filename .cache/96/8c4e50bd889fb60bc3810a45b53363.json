{"id":"../../node_modules/core-js/internals/to-big-int.js","dependencies":[{"name":"/Users/trannhatky/Desktop/NodeJS/package.json","includedInParent":true,"mtime":1676441370134},{"name":"/Users/trannhatky/Desktop/NodeJS/node_modules/core-js/package.json","includedInParent":true,"mtime":1675496172671},{"name":"../internals/to-primitive","loc":{"line":1,"column":26,"index":26},"parent":"/Users/trannhatky/Desktop/NodeJS/node_modules/core-js/internals/to-big-int.js","resolved":"/Users/trannhatky/Desktop/NodeJS/node_modules/core-js/internals/to-primitive.js"}],"generated":{"js":"var toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n"},"sourceMaps":{"js":{"mappings":[{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":1,"column":0},"generated":{"line":1,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":2,"column":0},"generated":{"line":2,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":3,"column":0},"generated":{"line":3,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":4,"column":0},"generated":{"line":4,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":5,"column":0},"generated":{"line":5,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":6,"column":0},"generated":{"line":6,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":7,"column":0},"generated":{"line":7,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":8,"column":0},"generated":{"line":8,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":9,"column":0},"generated":{"line":9,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":10,"column":0},"generated":{"line":10,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":11,"column":0},"generated":{"line":11,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":12,"column":0},"generated":{"line":12,"column":0}},{"source":"../../node_modules/core-js/internals/to-big-int.js","original":{"line":13,"column":0},"generated":{"line":13,"column":0}}],"sources":{"../../node_modules/core-js/internals/to-big-int.js":"var toPrimitive = require('../internals/to-primitive');\n\nvar $TypeError = TypeError;\n\n// `ToBigInt` abstract operation\n// https://tc39.es/ecma262/#sec-tobigint\nmodule.exports = function (argument) {\n  var prim = toPrimitive(argument, 'number');\n  if (typeof prim == 'number') throw $TypeError(\"Can't convert number to bigint\");\n  // eslint-disable-next-line es/no-bigint -- safe\n  return BigInt(prim);\n};\n"},"lineCount":13}},"error":null,"hash":"c780f1856aa60c49cbd6c65e0bbf1fd6","cacheData":{"env":{}}}